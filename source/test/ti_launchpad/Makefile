# Makefile for TI Launchpad project generated by HalCoGen

# Root directories
SRCDIR := halcogen/source
INCDIR := halcogen/include
BINDIR := build

# Toolchain base (make sure TI_CGT_ARM_DIR env var is set)
TI_CGT_ARM_DIR := /opt/ti-cgt-arm_20.2.7.LTS

SRCDIR := halcogen/source
INCDIR := halcogen/include
BINDIR := build

CC := $(TI_CGT_ARM_DIR)/bin/armcl
AS := $(CC)

CFLAGS := -mv7R4 --code_state=16 --float_support=VFPv3D16 \
          --fp_reassoc=off --fp_mode=strict --c99 --abi=eabi --enum_type=packed \
          --gen_func_subsections=on --gen_data_subsections=on -g \
          --emit_warnings_as_errors \
          --diag_wrap=off --display_error_number \
          -I$(INCDIR) -i$(TI_CGT_ARM_DIR)/include -i$(TI_CGT_ARM_DIR)/lib

LDFLAGS := --priority --rom_model --be32 --warn_sections

LIBS := $(TI_CGT_ARM_DIR)/lib/rtsv7R4_T_be_v3D16_eabi.lib
LINKER_SCRIPT := $(SRCDIR)/sys_link.cmd

C_SRCS := $(wildcard $(SRCDIR)/*.c)
ASM_SRCS := $(wildcard $(SRCDIR)/*.asm)

OBJS := $(patsubst $(SRCDIR)/%.c,$(BINDIR)/%.obj,$(C_SRCS)) \
        $(patsubst $(SRCDIR)/%.asm,$(BINDIR)/%.obj,$(ASM_SRCS))

ELF := $(BINDIR)/output.elf
HEXFILE := $(BINDIR)/output.hex

all: $(ELF) $(HEXFILE)

# Compile C files
$(BINDIR)/%.obj: $(SRCDIR)/%.c
	@mkdir -p $(BINDIR)
	$(CC) $(CFLAGS) --obj_directory=$(BINDIR) -c $< -o $@

# Compile ASM files
$(BINDIR)/%.obj: $(SRCDIR)/%.asm
	@mkdir -p $(BINDIR)
	$(AS) $(CFLAGS) --obj_directory=$(BINDIR) -c $< -o $@

# Link
$(ELF): $(OBJS)
	@mkdir -p $(BINDIR)
	$(CC) -z \
	  -i$(TI_CGT_ARM_DIR)/include -i$(INCDIR) \
	  $(LDFLAGS) \
	  $(OBJS) $(LINKER_SCRIPT) $(LIBS) \
	  -o $@ -m$(BINDIR)/output.map

# HEX generation
$(HEXFILE): $(ELF)
	cd $(BINDIR) && $(TI_CGT_ARM_DIR)/bin/armhex --ti_txt -o output.hex ../$<

clean:
	rm -rf $(BINDIR)

